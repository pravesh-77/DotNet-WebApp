name: .NET Core Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  job1:
    runs-on: self-hosted
    strategy:
      matrix:
        configuration: [Release]

    env:
      Solution_Name: WebApplication3.sln
      Test_Project_Path: your-test-project-path
      Wap_Project_Directory: your-wap-project-directory-name
      Wap_Project_Path: WebApplication3/WebApplication3
      DOTNET_ROOT: C:\Program Files\dotnet
      Appx_Bundle: Always
      Appx_Bundle_Platforms: x86|x64
      Appx_Package_Build_Mode: StoreUpload

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore Dependencies
        run: dotnet restore "WebApplication3/WebApplication3.sln"

      - name: Build the app package
        run: dotnet build ${{ env.Wap_Project_Path }} --configuration Debug

      - name: Generate .nupkg files
        run: dotnet pack ${{ env.Wap_Project_Path }} --configuration Debug --output ${{ env.Wap_Project_Path }}/AppPackages

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: WebApplication3.1.0.0.nupkg
          path: ${{ env.Wap_Project_Path }}/AppPackages

      - name: Publish to GitHub Packages
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'
          
      - name: Push package to GitHub Packages
        run: |
          foreach ($file in Get-ChildItem -Path "${{ env.Wap_Project_Path }}/AppPackages" -Recurse -Filter *.nupkg) {
            dotnet nuget push $file.FullName --source "https://nuget.pkg.github.com/pravesh-77/index.json" --api-key "${{ secrets.DOT_TOKEN }}"
          }

  job2:
    runs-on: self-hosted
    needs: job1
    steps:
      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: WebApplication3.1.0.0.nupkg
          path: ${{ github.workspace }}/WebApplication3/WebApplication3/AppPackages

      - name: Set LANG and PYTHONUTF8 environment variables and run Ansible playbook
        run: |
         $env:LANG="en_US.UTF-8"
         $env:PYTHONUTF8=1
         ansible-playbook deploy.yml



